//https://leetcode.com/problems/number-of-islands/description/
//200. Number of Islands
//naive approach b4 looking at discussion gives 5.8% only
class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        if(grid.size()==0)
            return 0;
        vector<vector<bool>> visited(grid.size(),vector<bool>(grid[0].size(),false));
        int returnThis=0;
        for(int i=0; i<grid.size(); i++)
        {
            for(int j=0; j<grid[i].size();j++)
            {
                if(grid[i][j] == '1' && visited[i][j] == false)
                {
        
                    returnThis++;
                    infect(grid,visited,i,j);
                }
            }
        }
        return returnThis;
    }
    void infect(vector<vector<char>>& grid,vector<vector<bool>>& visited,int i, int j)
    {
        cout<<"i="<<i<<" j="<<j<<endl;
        visited[i][j]=true;
        if(i != grid.size()-1)
        {
            if(grid[i+1][j]=='1' && visited[i+1][j] == false)
                infect(grid,visited,i+1,j);
        }
            
        if(j != grid[i].size()-1)
        {
            if(grid[i][j+1]=='1' && visited[i][j+1] == false)
                infect(grid,visited,i,j+1);
        }
        if(i!=0)
        {
            if(grid[i-1][j]=='1' && visited[i-1][j] == false)
                infect(grid,visited,i-1,j);
        }
        if(j!=0)
        {
            if(grid[i][j-1]=='1' && visited[i][j-1] == false)
                infect(grid,visited,i,j-1);
        }
    }
};
